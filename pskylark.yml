---
- name: Play for pskylark.hayaworld.home
  hosts: pskylark
  remote_user: hayato
  gather_facts: true

  vars_files:
    - host_vars/networks.yml

  handlers:
    - name: Restart handler tasks
      ansible.builtin.import_tasks:
        file: handlers/main.yml

  tasks:
    - name: "Common / Set user facts"
      ansible.builtin.import_tasks:
        file: tasks/all/set-users-facts.yml

    - name: "Common / Put authorized Key for hayato"
      ansible.builtin.import_tasks:
        file: tasks/all/authorized_keys.yml
      tags:
        - users

    - name: "Fix homedir permission"
      ansible.builtin.file:
        path: "/home/hayato"
        state: directory
        owner: "hayato"
        group: "hayato"
        mode: '0750'

    - name: Set nfs
      ansible.builtin.import_tasks:
        file: tasks/pskylark/nfs.yml
      tags:
        - nfs

    - name: Set CPU configurations
      ansible.builtin.import_role:
        name: cpufreq
      vars:
        cpufreq_cpu: "{{ cpu }}"
      tags:
        - cpu

    - name: Stop Unused services
      ansible.builtin.systemd_service:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - onlined.service
        - thumbnailDaemon.service
      tags:
        - services

    - name: Set LVM cache migration_threshold
      tags:
        - lvm
      vars:
        d: "{{ dmcache }}"
      block:
        - name: "Get current migration_threshold"
          ansible.builtin.shell:
            cmd: |
              set -o pipefail &&
              dmsetup table {{ dmcache.lvs }} |
              awk '{ \
                for (i=1; i<=NF; i++) { \
                  if ($i == "migration_threshold") { \
                    print $(i+1); exit; \
                  } \
                } \
              }'
          register: migration_threshold_current
          changed_when: false
          failed_when: false

        - name: "Set migration_threshold"
          ansible.builtin.command:
            cmd:
              "lvchange --cachesettings 'migration_threshold={{ d.migration_threshold }}' {{ d.lvs }}"
          register: retval
          changed_when: retval.rc == 0
          when:
            - migration_threshold_current.rc == 0
            - (migration_threshold_current.stdout | int) != (d.migration_threshold | int)
