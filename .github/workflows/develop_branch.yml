---
name: Hayaworld Ansible Jobs
on:
  push:
    branches:
      - '**'
      - '!master'
  workflow_dispatch:

jobs:
  Yamllint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run YAML Lint
        run: yamllint --strict --format github .

  AnsibleLint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore Caches
        uses: actions/cache@v4
        with:
          save-always: true
          path: |
            ~/.cache/pip
            ~/.ansible/collections
            ~/.ansible/roles
          key: cache-ansible-roles
          restore-keys: |
            cache-ansible-roles

      - name: Install ansible-lint via pip3
        run: |
          pip3 install --force --break-system-package ansible-lint

      - name: Prepare environments (ansible-galaxy install role)
        run: |
          ansible-galaxy role install -r requirements.yml

      - name: Prepare environments (ansible-galaxy install collection)
        run: |
          ansible-galaxy collection install -r requirements.yml

      - name: Run Ansible-lint
        run: |
          ansible-lint

  Duplicate_Check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add exec flag to dupcheck.sh
        run: "chmod +x ./dupcheck.sh"

      - name: NXDOMAIN_Duplicate_Check
        run: >
          "./dupcheck.sh"
          "inventories/host_vars/rui/NXDOMAIN.yml"

  Dry_Run_ansible:
    needs:
      - Yamllint
      - AnsibleLint
      - Duplicate_Check
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        vm:
          - console
          - jenkins
          - rui
          - skylark
          - tm
    environment: Staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare environments (ansible-galaxy install role)
        run: |
          ansible-galaxy role install -r requirements.yml

      - name: Prepare environments (ansible-galaxy install collection)
        run: |
          ansible-galaxy collection install -r requirements.yml

      - name: "ansible-playbook -C"
        env:
          ANSIBLE_FORCE_COLOR: '1'
        run: |
          ansible-playbook \
            -i inventories \
            -C \
            --ssh-extra-args='-o StrictHostKeyChecking=no' \
            --vault-password-file ${{ secrets.VAULT_PASSWORD_FILE }} \
            --extra-vars "ansible_sudo_pass=${{ secrets.SUDO }}" \
            ${{ matrix.vm }}.yml
