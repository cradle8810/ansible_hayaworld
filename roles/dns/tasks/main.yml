---
- name: "DNSmasq / Install DNSmasq"
  ansible.builtin.apt:
    name: "dnsmasq"
    state: present
    update_cache: true
  notify:
    - "Restart systemd-resolved"
    - "Restart dnsmasq"

- name: "DNSmasq / Add dnsmasq.conf"
  ansible.builtin.template:
    src: templates/etc/dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - "Restart dnsmasq"

- name: "DNSmasq / Add dnsmasq.resolv.txt"
  ansible.builtin.template:
    src: templates/etc/dnsmasq.d/resolv.txt.j2
    dest: /etc/dnsmasq.d/resolv.txt
    owner: root
    group: root
    mode: '0644'
  notify:
    - "Restart dnsmasq"

- name: "DNSmasq / Add NXDOMAIN (Ads Block) config"
  ansible.builtin.template:
    src: templates/etc/dnsmasq.d/blocklist.conf.j2
    dest: /etc/dnsmasq.d/blocklist.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - "Restart dnsmasq"

- name: "DNSmasq / Add CNAME config"
  ansible.builtin.template:
    src: templates/etc/dnsmasq.d/cname.conf.j2
    dest: /etc/dnsmasq.d/cname.conf.j2
    owner: root
    group: root
    mode: '0644'
  when: cname is defined
  notify:
    - "Restart dnsmasq"

- name: "DNSmasq / Add hosts(5)"
  ansible.builtin.template:
    src: templates/etc/hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: '0644'
  notify:
    - "Restart dnsmasq"

- name: "Set Systemd-Resolved status"
  block:
    - name: "Get Systemd-Resolved status"
      ansible.builtin.stat:
        path: "/etc/systemd/system/systemd-resolved.service"
      register: sr

    - name: "Set Systemd-Resolved status"
      ansible.builtin.set_fact:
        sr_masked: true
      when: sr.stat.lnk_source == "/dev/null"

  rescue:
    - name: "Set Systemd-Resolved status (Systemd-Resolved does not exist)"
      ansible.builtin.set_fact:
        sr_masked: false
